<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

<!-- 

필터의 경우 서블릿(servlet)에서 제어하기 때문에 웹 애플리케이션 내에서 동작하고, 
따라서 스프링의 Context에 접근할 수 없다. 

하지만 인터셉터의 경우, Spring Context내에서 존재하므로 
스프링의 모든 객체를 활용 할 수 있게 된다. 
따라서 Spring의 빈으로 등록된 컨트롤러나 서비스 객체들을 기존 그대로 주입받아서 사용할 수 있게 된다.

설정위치
Interceptor는 DispatcherServlet이 실행된 후,
Interceptor는 spring-servlet.xml,
Interceptor는 설정은 물론 메서드 구현이 필요. 
-->
    <!-- interceptor 프로그램 등록 -->
<!-- 	<beans:bean id="MyInterceptor" class="com.session.my.MyInterceptor" />
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<beans:ref bean="MyInterceptor"/>
		</interceptor>
	</interceptors> -->


<!-- 가입처리 인터셉터 -->
	<beans:bean id="AuthLoginInterceptor" class="com.session.my.AuthLoginInterceptor" />
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/joinProc"/>
			<beans:ref bean="AuthLoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.session.my" />
	
	

	
	
</beans:beans>
